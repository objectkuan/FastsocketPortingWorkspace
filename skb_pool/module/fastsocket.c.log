diff --git a/module/fastsocket.c b/module/fastsocket.c
index 5555304..2603797 100644
--- a/module/fastsocket.c
+++ b/module/fastsocket.c
@@ -31,23 +31,27 @@
 
 MODULE_LICENSE("GPL");
 MODULE_AUTHOR("Xiaofeng Lin <sina.com.cn>");
-MODULE_VERSION("1.0.0");
+MODULE_VERSION("1.0.0.SP.1");
 MODULE_DESCRIPTION("Fastsocket which provides scalable and thus high kernel performance for socket application");
 
 static int enable_fastsocket_debug = 3;
 static int enable_listen_spawn = 2;
 extern int enable_receive_flow_deliver;
 static int enable_fast_epoll = 1;
+extern int enable_skb_pool;
 
 module_param(enable_fastsocket_debug,int, 0);
 module_param(enable_listen_spawn, int, 0);
 module_param(enable_receive_flow_deliver, int, 0);
 module_param(enable_fast_epoll, int, 0);
+module_param(enable_skb_pool, int, 0);
 
 MODULE_PARM_DESC(enable_fastsocket_debug, " Debug level [Default: 3]" );
 MODULE_PARM_DESC(enable_listen_spawn, " Control Listen-Spawn: 0 = Disbale, 1 = Process affinity required, 2 = Autoset process affinity[Default]");
 MODULE_PARM_DESC(enable_receive_flow_deliver, " Control Receive-Flow-Deliver: 0 = Disbale[Default], 1 = Enabled");
 MODULE_PARM_DESC(enable_fast_epoll, " Control Fast-Epoll: 0 = Disbale, 1 = Enabled[Default]");
+MODULE_PARM_DESC(enable_skb_pool, " Control Skb-Pool: 0 = Disbale[Default], 1 = Enabled[Default]");
 
 int inline fsocket_get_dbg_level(void)
 {
@@ -734,6 +738,13 @@ out:
 	return err;
 }
 
+static void fsocket_init_socket(struct socket *sock)
+{
+	if (enable_skb_pool) {
+		sock_set_flag(sock->sk, SOCK_SKB_POOL);
+	}
+}
+
 static int fsocket_socket(int flags)
 {
 	struct socket *sock;
@@ -761,6 +772,8 @@ static int fsocket_socket(int flags)
 		goto free_sock;
 	}
 
+	fsocket_init_socket(sock);
+
 	err = fsock_map_fd(sock, flags);
 	if (err < 0) {
 		EPRINTK_LIMIT(ERR, "Map Socket FD failed\n");
@@ -1519,6 +1532,69 @@ static void init_once(void *foo)
 	inode_init_once(&ei->vfs_inode);
 }
 
 static int __init  fastsocket_init(void)
 {
 	int ret = 0;
@@ -1527,6 +1603,12 @@ static int __init  fastsocket_init(void)
 			num_online_cpus(), num_possible_cpus(),
 			num_present_cpus(), num_active_cpus());
 
 	ret = misc_register(&fastsocket_dev);
 	if (ret < 0) {
 		EPRINTK_LIMIT(ERR, "Register fastsocket channel device failed\n");
@@ -1563,6 +1645,8 @@ static int __init  fastsocket_init(void)
 		printk(KERN_INFO "Fastsocket: Enable Recieve Flow Deliver\n");
 	if (enable_fast_epoll)
 		printk(KERN_INFO "Fastsocket: Enable Fast Epoll\n");
+	if (enable_skb_pool)
+		printk(KERN_INFO "Fastsocket: Enable Skb Pool\n");
 
 	return ret;
 }
@@ -1582,7 +1666,10 @@ static void __exit fastsocket_exit(void)
 		enable_receive_flow_deliver = 0;
 		printk(KERN_INFO "Fastsocket: Disable Recieve Flow Deliver\n");
 	}
-
+	if (enable_skb_pool) {
+		enable_skb_pool = 0;
+		printk(KERN_INFO "Fastsocket: Disable Skb Pool\n");
+	}
 
 	printk(KERN_INFO "Fastsocket: Remove Module\n");
 }
